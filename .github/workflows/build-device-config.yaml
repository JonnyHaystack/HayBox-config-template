name: PlatformIO CI

on: [push]

jobs:
  metadata:
    runs-on: ubuntu-latest
    name: Parse config metadata
    outputs:
      meta_json: ${{ steps.parse_yaml.outputs.metadata }}
      # repo: ${{ fromJson(steps.parse_yaml.outputs.metadata).repo }}
      # revision: ${{ fromJson(steps.parse_yaml.outputs.metadata).revision }}
      build_matrix: ${{ steps.parse_yaml.outputs.metadata.build }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # - name: Read metadata from yaml file
    #   id: parse_yaml
    #   # uses: pietrobolcato/action-read-yaml@1.1.0
    #   uses: hyorman/action-read-yaml@set-array-output
    #   with:
    #     config: meta.yaml
    
    # - name: print stuff out
    #   run: |
    #     echo "${{ steps.parse_yaml.outputs }}"
    #     echo "${{ steps.parse_yaml.outputs.repo }}"
    #     echo "${{ steps.parse_yaml.outputs.revision }}"
    #     echo "${{ steps.parse_yaml.outputs.build }}"
    #     echo "${{ steps.parse_yaml.outputs.build.array }}"
    
    # - name: Get SDK Version from config
    #   id: parse_yaml
    #   uses: mikefarah/yq@master
    #   with:
    #     cmd: yq '' 'meta.yaml'

    - name: Install yaml2json
      run: python3 -m pip install remarshal

    - name: Read metadata from yaml file
      id: parse_yaml
        # echo "build_matrix=$(yaml2json 'meta.yaml' | jq -c .)" >> $GITHUB_ENV
      run: |
        echo "metadata=$(yaml2json 'meta.yaml')" >> "$GITHUB_OUTPUT"

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: metadata
    env:
      HAYBOX_REPO: ${{ fromJson(needs.metadata.outputs.meta_json).repo }}
      HAYBOX_REVISION: ${{ fromJson(needs.metadata.outputs.meta_json).revision }}
      DEVICE_CONFIG_REVISION: ${{ github.ref_type == 'tag' && github.ref_name || github.sha }}
    strategy:
        matrix: 
          include: ${{ fromJson(needs.metadata.outputs.meta_json).build }}
            # - env: pico
            #   bin_ext: uf2

    steps:
    - name: Check out HayBox repo
      uses: actions/checkout@v3
      with:
        repository: ${{ env.HAYBOX_REPO }}
        ref: ${{ env.HAYBOX_REVISION }}

    - name: Check out config repo
      uses: actions/checkout@v3
      with:
        path: config/test_device
    
    - name: Check some stuff
      run: |
        ls -lah
        ls -lah config
        ls -lah ..

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio

    # - name: Set artifact filename environment variable
    #   run: |
    #     echo "ARTIFACT_FILENAME=HayBox-${HAYBOX_REVISION}-${PIO_ENV}-${DEVICE_CONFIG_REVISION}.${BIN_EXT}" >> "$GITHUB_ENV"

    # - name: Set artifact path environment variable
    #   run: |
    #     echo "ARTIFACT_PATH=${PIO_ENV}/${ARTIFACT_FILENAME}" >> "$GITHUB_ENV"

    - name: Build ${{ matrix.env }} env
      env:
        PIO_ENV: ${{ matrix.env }}
        BIN_EXT: ${{ matrix.bin_ext }}
        # echo "ARTIFACT_PATH=${PIO_ENV}/HayBox-${HAYBOX_REVISION}-${PIO_ENV}-${DEVICE_CONFIG_REVISION}.${BIN_EXT}" >> "$GITHUB_ENV"
        # cp ".pio/build/${PIO_ENV}/firmware.${BIN_EXT}" "${PIO_ENV}/HayBox-${HAYBOX_REVISION}-${PIO_ENV}-${DEVICE_CONFIG_REVISION}.${BIN_EXT}"
      run: |
        pio run -e "$PIO_ENV"
        mkdir -p "$PIO_ENV"

        ARTIFACT_FILENAME="HayBox-${HAYBOX_REVISION}-${PIO_ENV}-${DEVICE_CONFIG_REVISION}.${BIN_EXT}"
        ARTIFACT_PATH="${PIO_ENV}/${ARTIFACT_FILENAME}"

        echo "$ARTIFACT_FILENAME" >> "$GITHUB_ENV"
        echo "$ARTIFACT_PATH" >> "$GITHUB_ENV"

        cp ".pio/build/${PIO_ENV}/firmware.${BIN_EXT}" "$ARTIFACT_PATH"

    - name: Publish ${{ matrix.env }} artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: ${{ env.ARTIFACT_PATH }}
        # path: ${{ matrix.env }}/HayBox-${{ env.HAYBOX_REVISION }}-${{ matrix.env }}-${{ env.DEVICE_CONFIG_REVISION }}.${{ matrix.bin_ext }}

    - name: Upload binaries to release
      uses: softprops/action-gh-release@v1
      if: github.ref_type == 'tag'
      with:
        files: ${{ env.ARTIFACT_PATH }}
        # files: ${{ matrix.env }}/HayBox-${{ env.HAYBOX_REVISION }}-${{ matrix.env }}-${{ env.DEVICE_CONFIG_REVISION }}.${{ matrix.bin_ext }}
