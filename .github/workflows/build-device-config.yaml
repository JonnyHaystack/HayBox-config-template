name: PlatformIO CI

on: [push]

jobs:
  metadata:
    runs-on: ubuntu-latest
    name: Parse config metadata
    outputs:
      repo: ${{ steps.parse_yaml.outputs.repo }}
      revision: ${{ steps.parse_yaml.outputs.revision }}
      build_matrix: ${{ steps.parse_yaml.outputs.build }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Read metadata from yaml file
      id: parse_yaml
      uses: pietrobolcato/action-read-yaml@1.1.0
      with:
        config: meta.yaml
    
    - name: print stuff out
      run: |
        echo "${{ steps.parse_yaml.outputs }}"
        echo "${{ steps.parse_yaml.outputs.repo }}"
        echo "${{ steps.parse_yaml.outputs.revision }}"
        echo "${{ steps.parse_yaml.outputs.build }}"
    
    # - name: Get SDK Version from config
    #   id: parse_yaml
    #   uses: mikefarah/yq@master
    #   with:
    #     cmd: yq '' 'meta.yaml'

    # - name: Install yaml2json
    #   run: python3 -m pip install remarshal

    # - name: Fetch Build Matrix
    #   run: |
    #     echo "build_matrix=$(yaml2json '${{ inputs.build_matrix_path }}' | jq -c .)" >> $GITHUB_ENV
    #     yaml2json "${{ inputs.build_matrix_path }}" | jq

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      UPSTREAM_REPO: ${{ needs.metadata.outputs.repo }}
      VERSION_REF: ${{ needs.metadata.outputs.revision }}
    #   VERSION_REF: ${{ github.ref_type == 'tag' && github.ref_name || github.sha }}
    strategy:
        matrix: 
          include: ${{ needs.metadata.outputs.build_matrix }}
            # - env: pico
            #   bin_ext: uf2

    steps:
    - name: Check out HayBox repo
      uses: actions/checkout@v3
      with:
        repository: ${{ env.UPSTREAM_REPO }}
        ref: ${{ env.VERSION_REF }}

    - name: Check out config repo
      uses: actions/checkout@v3
      with:
        path: config/test_device
    
    - name: Check some stuff
      run: |
        ls -lah
        ls -lah config
        ls -lah ..

    # - name: Set up Python
    #   uses: actions/setup-python@v4
    #   with:
    #     python-version: '3.10'

    # - name: Install PlatformIO
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install --upgrade platformio

    # - name: Build ${{ matrix.env }} env
    #   run: |
    #     pio run -e ${{ matrix.env }}
    #     mkdir -p ${{ matrix.env }}
    #     cp .pio/build/${{ matrix.env }}/firmware.${{ matrix.bin_ext }} ${{ matrix.env }}/HayBox-${{ env.VERSION_REF }}-${{ matrix.env }}.${{ matrix.bin_ext }}

    # - name: Publish ${{ matrix.env }} artifacts
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: HayBox-${{ env.VERSION_REF }}-${{ matrix.env }}.${{ matrix.bin_ext }}
    #     path: ${{ matrix.env }}/HayBox-${{ env.VERSION_REF }}-${{ matrix.env }}.${{ matrix.bin_ext }}

    # - name: Upload binaries to release
    #   uses: softprops/action-gh-release@v1
    #   if: github.ref_type == 'tag'
    #   with:
    #     files: ${{ matrix.env }}/HayBox-${{ env.VERSION_REF }}-${{ matrix.env }}.${{ matrix.bin_ext }}
